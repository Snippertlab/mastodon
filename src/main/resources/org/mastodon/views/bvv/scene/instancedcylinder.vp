layout (location = 0) in vec3 aPos;

layout (location = 1) in mat3 e;
layout (location = 4) in mat3 ite;
layout (location = 7) in vec3 t;

out vec3 Normal;
out vec3 FragPos;
out vec3 ObjectColor;

uniform mat4 pvm;
uniform mat4 vm;
uniform mat3 itvm;

const vec3 highlightColor = vec3( 1, 1, 1 );

void main()
{
	// TODO: pass as uniforms
	float r0 = 2;
	float r1 = 3;
	// ======================

	float r = r0 - r1;
	float s = r0 - aPos.z * r;
	vec3 fPos = vec3( s * aPos.xy, aPos.z );
	vec4 pos = vec4( e * fPos + t, 1.0 );
	gl_Position = pvm * pos;
	vec3 n = vec3( aPos.xy, r );
	Normal = normalize( itvm * ite * n );
	FragPos = vec3( vm * pos );
	ObjectColor = highlightColor;
}
