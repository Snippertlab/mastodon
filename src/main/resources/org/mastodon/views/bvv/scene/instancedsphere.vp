layout (location = 0) in vec3 aPos;

layout (location = 1) in vec3 t;
layout (location = 2) in vec3 color;

out vec3 Normal;
out vec3 FragPos;
out vec3 ObjectColor;
out float hl;

uniform mat4 pvm;
uniform mat4 vm;
uniform mat3 itvm;
uniform float radius;
uniform int highlight;

const vec3 highlightColor = vec3(0.2, 0.1, 0.2);
const float highlightDilateMin = 0.05;
const float highlightDilateRatio = 0.05;

void main()
{
	ObjectColor = color;
	float r = radius;
	if (gl_InstanceID == highlight)
	{
//		ObjectColor += highlightColor;
		float dilate = max(highlightDilateMin, r * highlightDilateRatio);
		r += dilate;

		hl = 1;
	}
	vec4 pos = vec4(r * aPos + t, 1.0);
	gl_Position = pvm * pos;
	Normal = normalize(itvm * aPos);
	FragPos = vec3(vm * pos);
}
